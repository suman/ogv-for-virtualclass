"use strict";

// just the bits we need

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var TinyEvents = function () {
  function TinyEvents() {
    _classCallCheck(this, TinyEvents);

    this._e = {};
  }

  _createClass(TinyEvents, [{
    key: "on",
    value: function on(name, handler) {
      (this._e[name] || (this._e[name] = [])).push(handler);
    }
  }, {
    key: "off",
    value: function off(name, handler) {
      var l = this._e[name] || [];
      var i = l.indexOf(handler);
      if (handler >= 0) {
        l.splice(i, 1);
      }
    }
  }, {
    key: "emit",
    value: function emit(name, arg) {
      (this._e[name] || []).slice().forEach(function (f) {
        return f(arg);
      });
    }
  }]);

  return TinyEvents;
}();

module.exports = TinyEvents;
